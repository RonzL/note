****************************************
一、git三种基本状态
二、将工作目录的文件放到git仓库只要两步
三、查看提交
四、git回滚快照
五、找回历史提交ID
六、比较暂存区域与工作目录
七、修改最后一次提交
八、删除文件
九、git分支基本操作
****************************************


------------------------------
一、git三种基本状态
------------------------------
	《工作目录》	===>	《暂存区域》	===>	《GIT仓库》
	working directory		staging area		git directory(repository)

	
-----------------------------------------
二、将工作目录的文件放到git仓库只要两步
-----------------------------------------
	1.添加到暂存区域：	
		$git add filename
	2.添加到GIT仓库：
		$git commit -m "something"

		
-----------------------------------
三、查看提交(git commit -m...)记录
-----------------------------------
	1.查看:	
		$git log
	2.退出:	
		$git log
		
		
-----------------------------------
四、git回滚快照
-----------------------------------
	1.	$git reset  < >HEAD~n      (n表示回滚到上几个快照)
		--mixed(默认)	:移动HEAD指向，将其指向上一个快照
						:将HEAD移动后指向的快照回滚到暂存区域

		--soft			:移动HEAD指向，将其指向上一个快照

		--hard			:移动HEAD指向，将其指向上一个快照
						:将HEAD移动后指向的快照回滚到暂存区域
						:将暂存区域文件还原到工作目录

	2.	$git reset id(id前几个字母即可)     回滚指定快照
	3.	$git reset 

	
---------------------------------
五、找回历史提交ID:
---------------------------------
	$git reflog

	
---------------------------------
六、比较暂存区域与工作目录
---------------------------------
	$git diff				比较暂存与工作目录
	$git diff id1 id2		比较两个快照 
	$git diff id			比较工作目录和某个快照
	$git diff --cached [快照id]	比较暂存和git仓库快照


---------------------------------
七、修改最后一次提交
---------------------------------
	$git commit --amend

	
-------------------------------
八、删除文件
-------------------------------
	$git rm filename		只删除工作目录、暂存区域的文件
							删除仓库中文件需要回滚一次
	$git rm -f				暴力删除
	$git rm -m filename		删除工作目录文件 
Ps: 文件操作与linux下命令行相同

-----------------------------
九、git分支基本操作
-----------------------------
	$git branch feature		创建分支
	$git branch -b feature 	创建并切换到该分支
	$git check out master	切换至主分支
	$git merge name			合并至某分支
	$git branch -d 			删除分支